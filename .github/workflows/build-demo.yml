---
name: Build Demo App
run-name: Building the URL Shortener
#on: [push]

on:
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: url-shortener


jobs:
  build_container:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.sha.outputs.short_sha }}
    steps:
      - name: list env vars
        run: env
      
      - name: Check out repository code
        uses: actions/checkout@v3
      
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      
      # - uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.10' 
      
      # - name: Install poetry
      #   uses: abatilo/actions-poetry@v2
      #   with:
      #     poetry-version: 1.2.1
      
      # - name: Testing installation
      #   run: poetry version
      
      - name: Set short sha
        id: sha
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      
      - name: Check short sha
        run: echo ${{ steps.sha.outputs.short_sha }}
      
      - id: actor
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.actor }}
      - id: step2
        run: echo ${{ steps.actor.outputs.lowercase }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DEMO_TOKEN }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
            
      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: "${{ env.REGISTRY }}/${{ steps.actor.outputs.lowercase }}/url-shortener:${{ steps.sha.outputs.short_sha }}"
    # outputs:
    #   image_tag: ${{ steps.sha.outputs.short_sha }}

  call_update_image_tag:
    needs: build_container
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: manifests
      GITOPS_REPO: AbsolutOD/cs-gitops-demo
      DEPLOYMENT_MANIFEST: overlays/demo/deployment.yaml
    # defaults:
    #   run:
    #     working-directory: manifests
    steps:
      - name: list env vars
        run: env

      - name: Echo Image Tag
        run: echo "IMAGE_TAG -> ${{ needs.build_container.outputs.image_tag }}"

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GITOPS_REPO }}
          path: ${{ env.WORKING_DIR }}
      
      - name: List files in the repository
        run: ls -al
        working-directory: manifests

      - id: update-image
        uses: Charlyzzz/update-k8s-image@v1.7.1
        with:
          manifest-path: "${{ env.WORKING_DIR }}/${{ env.DEPLOYMENT_MANIFEST }}"
          new-image-tag: ${{ needs.buid_container.outputs.image_tag }}
          container-name: url-shortener

      # Example of using the output
      - id: test
        run: curl ${{ steps.update-image.outputs.old-image-tag }}

      - name: git status
        run: git status
        working-directory: manifests

  # call_update_image_tag:
  #   needs: build_container
  #   uses: AbsolutOD/cs-gitops-demo/.github/workflows/update-image-tags.yaml@main
  #   with:
  #     image_tag: ${{needs.build_container.outputs.short_sha }}
